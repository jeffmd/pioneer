From 8ca8008a5c546c92b75b825eb212f9b4d8a0cdc8 Mon Sep 17 00:00:00 2001
From: Axtel Sturnclaw <sturnclaw@protonmail.com>
Date: Thu, 29 May 2025 17:36:02 -0400
Subject: [PATCH 1/3] Patch: use Pioneer SDL cursor

---
 contrib/imgui/backends/imgui_impl_sdl2.cpp | 58 +++++++++++++++++++++-
 contrib/imgui/backends/imgui_impl_sdl2.h   |  5 ++
 2 files changed, 62 insertions(+), 1 deletion(-)

diff --git a/contrib/imgui/backends/imgui_impl_sdl2.cpp b/contrib/imgui/backends/imgui_impl_sdl2.cpp
index f3a31c5c3..fee590954 100644
--- a/contrib/imgui/backends/imgui_impl_sdl2.cpp
+++ b/contrib/imgui/backends/imgui_impl_sdl2.cpp
@@ -503,6 +503,62 @@ bool ImGui_ImplSDL2_ProcessEvent(const SDL_Event* event)
 EM_JS(void, ImGui_ImplSDL2_EmscriptenOpenURL, (char const* url), { url = url ? UTF8ToString(url) : null; if (url) window.open(url, '_blank'); });
 #endif
 
+// The Pioneer cursor.
+static const char mouse_cursor[] = {
+	"XXXXXXXXXX              "
+	"X.........X             "
+	"X..........X            "
+	"X...........X           "
+	"X............X          "
+	"X.............X         "
+	"X..............X        "
+	"X...............X       "
+	"X................X      "
+	"X.................X     "
+	" X.................X    "
+	"  X..........    ...X   "
+	"   X........      ...X  "
+	"    X......        ...X "
+	"     X.....        ....X"
+	"      X....        ...X "
+	"       X...        ..X  "
+	"        X...      ..X   "
+	"         X...    ..X    "
+	"          X.......X     "
+	"           X.....X      "
+	"            X...X       "
+	"             X.X        "
+	"              X         "
+};
+
+// Shamelessly adapted from the SDL wiki, who stole it from the mailing list.
+// Create the pioneer cursor in SDL's preferred format.
+static SDL_Cursor* CreatePioneerCursor()
+{
+	int i = -1;
+	// Cursor data is stored as bitfields in most-significant-bit first order.
+	Uint8 data[3*24];
+	Uint8 mask[3*24];
+	for (int row = 0; row < 24; ++row) {
+		for (int col = 0; col < 24; ++col) {
+			if (col % 8) {
+				data[i] <<= 1;
+				mask[i] <<= 1;
+			} else {
+				i++;
+				data[i] = mask[i] = 0; // clear the next byte.
+			}
+			switch (mouse_cursor[row*24 + col]) {
+			// Use fallthrough here because it makes sense.
+			case 'X': data[i] |= 0x01;
+			case '.': mask[i] |= 0x01;
+			default: break;
+			}
+		}
+	}
+	return SDL_CreateCursor(data, mask, 24, 24, 0, 0);
+}
+
 static bool ImGui_ImplSDL2_Init(SDL_Window* window, SDL_Renderer* renderer, void* sdl_gl_context)
 {
     ImGuiIO& io = ImGui::GetIO();
@@ -561,7 +617,7 @@ static bool ImGui_ImplSDL2_Init(SDL_Window* window, SDL_Renderer* renderer, void
     bd->WantUpdateGamepadsList = true;
 
     // Load mouse cursors
-    bd->MouseCursors[ImGuiMouseCursor_Arrow] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_ARROW);
+    bd->MouseCursors[ImGuiMouseCursor_Arrow] = CreatePioneerCursor();
     bd->MouseCursors[ImGuiMouseCursor_TextInput] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_IBEAM);
     bd->MouseCursors[ImGuiMouseCursor_ResizeAll] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZEALL);
     bd->MouseCursors[ImGuiMouseCursor_ResizeNS] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZENS);
diff --git a/contrib/imgui/backends/imgui_impl_sdl2.h b/contrib/imgui/backends/imgui_impl_sdl2.h
index fc31bbc06..9c8b16f4e 100644
--- a/contrib/imgui/backends/imgui_impl_sdl2.h
+++ b/contrib/imgui/backends/imgui_impl_sdl2.h
@@ -26,6 +26,9 @@
 #include "imgui/imgui.h"      // IMGUI_IMPL_API
 #ifndef IMGUI_DISABLE
 
+#include <SDL_scancode.h>
+#include <SDL_keycode.h>
+
 struct SDL_Window;
 struct SDL_Renderer;
 struct _SDL_GameController;
@@ -47,4 +50,6 @@ IMGUI_IMPL_API bool     ImGui_ImplSDL2_ProcessEvent(const SDL_Event* event);
 enum ImGui_ImplSDL2_GamepadMode { ImGui_ImplSDL2_GamepadMode_AutoFirst, ImGui_ImplSDL2_GamepadMode_AutoAll, ImGui_ImplSDL2_GamepadMode_Manual };
 IMGUI_IMPL_API void     ImGui_ImplSDL2_SetGamepadMode(ImGui_ImplSDL2_GamepadMode mode, struct _SDL_GameController** manual_gamepads_array = nullptr, int manual_gamepads_count = -1);
 
+ImGuiKey ImGui_ImplSDL2_KeyEventToImGuiKey(SDL_Keycode keycode, SDL_Scancode scancode);
+
 #endif // #ifndef IMGUI_DISABLE
-- 
2.49.0

